// Generated by view binder compiler. Do not edit!
package com.example.dietaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dietaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import model.CustomRectangleView;

public final class FragmentHistorialBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CardView cardMesures;

  @NonNull
  public final CustomRectangleView customRectangleView;

  @NonNull
  public final EditText edtBraz;

  @NonNull
  public final EditText edtCama;

  @NonNull
  public final EditText edtCintura;

  @NonNull
  public final EditText edtDataIniciHistorial;

  @NonNull
  public final EditText edtPesRegistrat;

  @NonNull
  public final EditText edtPit;

  @NonNull
  public final ImageButton imageView;

  @NonNull
  public final RecyclerView recyclehistorial;

  @NonNull
  public final TextView txtBraz;

  @NonNull
  public final TextView txtCama;

  @NonNull
  public final TextView txtCintura;

  @NonNull
  public final TextView txtHistorialTitol;

  @NonNull
  public final TextView txtImc;

  @NonNull
  public final TextView txtMesures;

  @NonNull
  public final TextView txtPesRegistrat;

  @NonNull
  public final TextView txtPit;

  @NonNull
  public final TextView txvDataIniciHistorial;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  private FragmentHistorialBinding(@NonNull FrameLayout rootView, @NonNull CardView cardMesures,
      @NonNull CustomRectangleView customRectangleView, @NonNull EditText edtBraz,
      @NonNull EditText edtCama, @NonNull EditText edtCintura,
      @NonNull EditText edtDataIniciHistorial, @NonNull EditText edtPesRegistrat,
      @NonNull EditText edtPit, @NonNull ImageButton imageView,
      @NonNull RecyclerView recyclehistorial, @NonNull TextView txtBraz, @NonNull TextView txtCama,
      @NonNull TextView txtCintura, @NonNull TextView txtHistorialTitol, @NonNull TextView txtImc,
      @NonNull TextView txtMesures, @NonNull TextView txtPesRegistrat, @NonNull TextView txtPit,
      @NonNull TextView txvDataIniciHistorial, @NonNull View view, @NonNull View view2) {
    this.rootView = rootView;
    this.cardMesures = cardMesures;
    this.customRectangleView = customRectangleView;
    this.edtBraz = edtBraz;
    this.edtCama = edtCama;
    this.edtCintura = edtCintura;
    this.edtDataIniciHistorial = edtDataIniciHistorial;
    this.edtPesRegistrat = edtPesRegistrat;
    this.edtPit = edtPit;
    this.imageView = imageView;
    this.recyclehistorial = recyclehistorial;
    this.txtBraz = txtBraz;
    this.txtCama = txtCama;
    this.txtCintura = txtCintura;
    this.txtHistorialTitol = txtHistorialTitol;
    this.txtImc = txtImc;
    this.txtMesures = txtMesures;
    this.txtPesRegistrat = txtPesRegistrat;
    this.txtPit = txtPit;
    this.txvDataIniciHistorial = txvDataIniciHistorial;
    this.view = view;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHistorialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHistorialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_historial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHistorialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardMesures;
      CardView cardMesures = ViewBindings.findChildViewById(rootView, id);
      if (cardMesures == null) {
        break missingId;
      }

      id = R.id.custom_rectangle_view;
      CustomRectangleView customRectangleView = ViewBindings.findChildViewById(rootView, id);
      if (customRectangleView == null) {
        break missingId;
      }

      id = R.id.edtBraz;
      EditText edtBraz = ViewBindings.findChildViewById(rootView, id);
      if (edtBraz == null) {
        break missingId;
      }

      id = R.id.edtCama;
      EditText edtCama = ViewBindings.findChildViewById(rootView, id);
      if (edtCama == null) {
        break missingId;
      }

      id = R.id.edtCintura;
      EditText edtCintura = ViewBindings.findChildViewById(rootView, id);
      if (edtCintura == null) {
        break missingId;
      }

      id = R.id.edtDataIniciHistorial;
      EditText edtDataIniciHistorial = ViewBindings.findChildViewById(rootView, id);
      if (edtDataIniciHistorial == null) {
        break missingId;
      }

      id = R.id.edtPesRegistrat;
      EditText edtPesRegistrat = ViewBindings.findChildViewById(rootView, id);
      if (edtPesRegistrat == null) {
        break missingId;
      }

      id = R.id.edtPit;
      EditText edtPit = ViewBindings.findChildViewById(rootView, id);
      if (edtPit == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageButton imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.recyclehistorial;
      RecyclerView recyclehistorial = ViewBindings.findChildViewById(rootView, id);
      if (recyclehistorial == null) {
        break missingId;
      }

      id = R.id.txtBraz;
      TextView txtBraz = ViewBindings.findChildViewById(rootView, id);
      if (txtBraz == null) {
        break missingId;
      }

      id = R.id.txtCama;
      TextView txtCama = ViewBindings.findChildViewById(rootView, id);
      if (txtCama == null) {
        break missingId;
      }

      id = R.id.txtCintura;
      TextView txtCintura = ViewBindings.findChildViewById(rootView, id);
      if (txtCintura == null) {
        break missingId;
      }

      id = R.id.txtHistorialTitol;
      TextView txtHistorialTitol = ViewBindings.findChildViewById(rootView, id);
      if (txtHistorialTitol == null) {
        break missingId;
      }

      id = R.id.txtImc;
      TextView txtImc = ViewBindings.findChildViewById(rootView, id);
      if (txtImc == null) {
        break missingId;
      }

      id = R.id.txtMesures;
      TextView txtMesures = ViewBindings.findChildViewById(rootView, id);
      if (txtMesures == null) {
        break missingId;
      }

      id = R.id.txtPesRegistrat;
      TextView txtPesRegistrat = ViewBindings.findChildViewById(rootView, id);
      if (txtPesRegistrat == null) {
        break missingId;
      }

      id = R.id.txtPit;
      TextView txtPit = ViewBindings.findChildViewById(rootView, id);
      if (txtPit == null) {
        break missingId;
      }

      id = R.id.txvDataIniciHistorial;
      TextView txvDataIniciHistorial = ViewBindings.findChildViewById(rootView, id);
      if (txvDataIniciHistorial == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new FragmentHistorialBinding((FrameLayout) rootView, cardMesures, customRectangleView,
          edtBraz, edtCama, edtCintura, edtDataIniciHistorial, edtPesRegistrat, edtPit, imageView,
          recyclehistorial, txtBraz, txtCama, txtCintura, txtHistorialTitol, txtImc, txtMesures,
          txtPesRegistrat, txtPit, txvDataIniciHistorial, view, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
