// Generated by view binder compiler. Do not edit!
package com.example.dietaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dietaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemIngredientBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ingredientCalories;

  @NonNull
  public final TextView ingredientCalories2;

  @NonNull
  public final TextView ingredientName;

  @NonNull
  public final TextView ingredientName2;

  @NonNull
  public final TextView ingredientQuantitat;

  @NonNull
  public final TextView ingredientQuantitat2;

  private ItemIngredientBinding(@NonNull LinearLayout rootView,
      @NonNull TextView ingredientCalories, @NonNull TextView ingredientCalories2,
      @NonNull TextView ingredientName, @NonNull TextView ingredientName2,
      @NonNull TextView ingredientQuantitat, @NonNull TextView ingredientQuantitat2) {
    this.rootView = rootView;
    this.ingredientCalories = ingredientCalories;
    this.ingredientCalories2 = ingredientCalories2;
    this.ingredientName = ingredientName;
    this.ingredientName2 = ingredientName2;
    this.ingredientQuantitat = ingredientQuantitat;
    this.ingredientQuantitat2 = ingredientQuantitat2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemIngredientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemIngredientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_ingredient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemIngredientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ingredientCalories;
      TextView ingredientCalories = ViewBindings.findChildViewById(rootView, id);
      if (ingredientCalories == null) {
        break missingId;
      }

      id = R.id.ingredientCalories2;
      TextView ingredientCalories2 = ViewBindings.findChildViewById(rootView, id);
      if (ingredientCalories2 == null) {
        break missingId;
      }

      id = R.id.ingredientName;
      TextView ingredientName = ViewBindings.findChildViewById(rootView, id);
      if (ingredientName == null) {
        break missingId;
      }

      id = R.id.ingredientName2;
      TextView ingredientName2 = ViewBindings.findChildViewById(rootView, id);
      if (ingredientName2 == null) {
        break missingId;
      }

      id = R.id.ingredientQuantitat;
      TextView ingredientQuantitat = ViewBindings.findChildViewById(rootView, id);
      if (ingredientQuantitat == null) {
        break missingId;
      }

      id = R.id.ingredientQuantitat2;
      TextView ingredientQuantitat2 = ViewBindings.findChildViewById(rootView, id);
      if (ingredientQuantitat2 == null) {
        break missingId;
      }

      return new ItemIngredientBinding((LinearLayout) rootView, ingredientCalories,
          ingredientCalories2, ingredientName, ingredientName2, ingredientQuantitat,
          ingredientQuantitat2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
