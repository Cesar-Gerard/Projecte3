// Generated by view binder compiler. Do not edit!
package com.example.dietaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dietaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogInsertHistorialBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final EditText edtAlzada;

  @NonNull
  public final EditText edtBraz;

  @NonNull
  public final EditText edtCadera;

  @NonNull
  public final EditText edtCama;

  @NonNull
  public final EditText edtPes;

  @NonNull
  public final EditText edtPit;

  private DialogInsertHistorialBinding(@NonNull CardView rootView, @NonNull EditText edtAlzada,
      @NonNull EditText edtBraz, @NonNull EditText edtCadera, @NonNull EditText edtCama,
      @NonNull EditText edtPes, @NonNull EditText edtPit) {
    this.rootView = rootView;
    this.edtAlzada = edtAlzada;
    this.edtBraz = edtBraz;
    this.edtCadera = edtCadera;
    this.edtCama = edtCama;
    this.edtPes = edtPes;
    this.edtPit = edtPit;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogInsertHistorialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogInsertHistorialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_insert_historial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogInsertHistorialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtAlzada;
      EditText edtAlzada = ViewBindings.findChildViewById(rootView, id);
      if (edtAlzada == null) {
        break missingId;
      }

      id = R.id.edtBraz;
      EditText edtBraz = ViewBindings.findChildViewById(rootView, id);
      if (edtBraz == null) {
        break missingId;
      }

      id = R.id.edtCadera;
      EditText edtCadera = ViewBindings.findChildViewById(rootView, id);
      if (edtCadera == null) {
        break missingId;
      }

      id = R.id.edtCama;
      EditText edtCama = ViewBindings.findChildViewById(rootView, id);
      if (edtCama == null) {
        break missingId;
      }

      id = R.id.edtPes;
      EditText edtPes = ViewBindings.findChildViewById(rootView, id);
      if (edtPes == null) {
        break missingId;
      }

      id = R.id.edtPit;
      EditText edtPit = ViewBindings.findChildViewById(rootView, id);
      if (edtPit == null) {
        break missingId;
      }

      return new DialogInsertHistorialBinding((CardView) rootView, edtAlzada, edtBraz, edtCadera,
          edtCama, edtPes, edtPit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
